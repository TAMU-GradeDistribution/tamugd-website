function getSupportedData(){requestSupported().then(()=>{$("#department_select").empty(),allDepartments.forEach(e=>$("#department_select").append(`<option value="${e.toUpperCase()}">${e}</option>`)),$("#department_select").trigger("chosen:updated"),$("#year_range").jRange("updateRange",`${allYears[0]},${allYears[allYears.length-1]}`),$("#year_range").jRange("updateRender",allYears)}).catch(e=>alert(e))}function getCourseData(){const e=$("#course_field").val(),t=$("#department_select").val();if(""===e||""===t)return;const a=$("#search_button").html();$("#search_button").html('<i class="fa fa-refresh fa-spin" title="Loading..."></i>'),requestSearch(t,e).then(()=>document.title=`${t} ${e} | TAMU Grade Distribution`).catch(e=>alert(e)).finally(()=>{$("#search_button").html(a),autoPopulateProfs()})}function requestSupported(){return new Promise((e,t)=>{if(setTimeout(()=>{t("Server error ([/supported] timed out). Try refreshing the page.")},5e3),responseCache.supported)return allYears=responseCache.supported.years,allDepartments=responseCache.supported.departments,void e("Found in cache");fetch("supported").then(a=>{a.json().then(t=>{allYears=t.years.sort(),allDepartments=t.departments.sort(),$("#build_banner").toggleClass("hidden",Boolean(100==t.buildPercentage)),$("#build_percentage").text(t.buildPercentage),responseCache.supported={query:"supported",years:allYears,departments:allDepartments},e("Queried server")}).catch(()=>t("Server error ([/supported] bad response). Try refreshing the page."))}).catch(e=>t(e))})}function requestSearch(e,t){return new Promise((a,r)=>{setTimeout(()=>{r("Server error ([/search] timed out). Refresh or try again in a bit.")},5e3),e=e.toUpperCase(),t=t.toUpperCase();const o=`search?d=${e}&c=${t}`;if(void 0!==responseCache[o])return null===responseCache[o]&&r(`Course ${e} ${t} not found!`),courseDataAll=responseCache[o],filterCourseData(),void a("Found in cache");fetch(o).then(s=>{s.json().then(s=>{if(0===s.length)return responseCache[o]=null,void r(`Course ${e} ${t} not found!`);courseDataAll=s.sort((e,t)=>t.year-e.year),filterCourseData(),responseCache[o]=Object.freeze(courseDataAll),a("Queried server")}).catch(()=>r("Server error ([/search] bad response). Refresh or try again in a bit."))}).catch(e=>r(e))})}function filterCourseData(){const e=interpolateNumArray($("#year_range").val().split(","),1),t=($("#semester_select").chosen().val()+"").split(",").map(e=>e.toUpperCase()),a=$("#honors_select").chosen().val().toUpperCase();courseData=JSON.parse(JSON.stringify(courseDataAll)),courseData=courseData.filter(a=>e.includes(a.year)&&t.includes(a.semester)),courseProfs=courseData.filter((e,t,a)=>a.indexOf(e)===t),courseData=courseData.filter(e=>honorsFilter(a,e.honors))}function updateSelection(){""!==$("#course_field").val()&&(filterCourseData(),void 0!==courseDataGrid&&courseDataGrid.updateConfig({data:getCourseDataGridDataset()}).forceRender(),courseGPAChart.data.labels=getGPAChartLabels(),getGPAChartDataset(e=>{courseGPAChart.data.datasets=e,courseGPAChart.update("none")}),getGPARangeChartDataset(e=>{courseRangeChart.data.datasets=e,courseRangeChart.update("none")}),getLetterChartDataset(e=>{courseLetterChart.data.datasets=e,courseLetterChart.update("none")}),getCourseDifficultyChartDataset(e=>{courseDiffChart.data.datasets=e,courseDiffChart.update("none")}),updateThemeMode())}function getGPAChartLabels(e,t){e||(e=$("#year_range").val().split(",")),t||(t=$("#semester_select").chosen().val());const a=[];e=interpolateNumArray(e,1);for(let r=0;r<e.length;r++)for(let o=0;o<t.length;o++)a.push(`${t[o]} ${e[r].toString().slice(2)}'`);return a}function autoPopulateProfs(){$("#professor_select").empty();let e=void 0;e=courseProfs.length<=7?courseProfs.map(e=>e.professorName):courseProfs.filter((e,t,a)=>{let r=0;for(let t=0;t<a.length;t++)if(a[t].professorName===e.professorName&&(a[t].year!==e.year||a[t].semester!==e.semester)&&(r++,r>=2))return!0;return!1}).map(e=>e.professorName),courseProfs.map(e=>e.professorName).sort().filter((e,t,a)=>a.indexOf(e)===t).forEach(t=>{e.includes(t)?$("#professor_select").append(`<option value="${t}" selected>${t}</option>`):$("#professor_select").append(`<option value="${t}">${t}</option>`)}),$("#professor_select").trigger("chosen:updated"),updateSelection()}function getGPAChartDataset(e){const t=interpolateNumArray(($("#year_range").val()+"").split(","),1),a=$("#semester_select").chosen().val(),r=$("#professor_select").chosen().val(),o=new Array(r.length),s=new Array(r.length);for(let e=0;e<o.length;e++)o[e]=new Array(t.length*a.length).fill(0),s[e]=new Array(t.length*a.length).fill(0);for(let e=0;e<courseData.length;e++)for(let n=0;n<t.length*a.length;n++){const l=Math.floor(n/a.length)%t.length,c=Math.floor(n%a.length);if(courseData[e].year===Number(t[l])&&courseData[e].semester===a[c].toUpperCase()){const t=r.indexOf(courseData[e].professorName);if(-1!=t){const a=Number(courseData[e].numA)+Number(courseData[e].numB)+Number(courseData[e].numC)+Number(courseData[e].numD)+Number(courseData[e].numF);o[t][n]+=Number(courseData[e].avgGPA)*Number(a),s[t][n]+=Number(a)}}}for(let e=0;e<o.length;e++)for(let r=0;r<t.length*a.length;r++)o[e][r]=Number(o[e][r])/Number(s[e][r]);const n=getColors(),l=[];for(let e=0;e<o.length;e++)l.push({label:r[e],data:o[e],fill:!1,borderColor:n[e],backgroundColor:n[e]+"80",tension:.1,borderWidth:2,segment:{borderDash:e=>skipped(e,[6,6])}});return e(l)}function getGPARangeChartDataset(e){const t=["","GPA Low: ","GPA Avg: ","GPA High: ",""],a=["rgba(102,102,102,0.66)","rgba(247,194,14,0.66)","rgba(128,149,7,0.66)","rgba(247,194,14,0.66)","rgba(102,102,102,0.66)"],r=new Array(t.length).fill(0);let o=4,s=0,n=0,l=0;for(let e=0;e<courseData.length;e++){const t=Number(courseData[e].avgGPA);n+=t,l+=1,o=Math.min(o,t),s=Math.max(s,t)}n/=l,r[2]=.04,r[0]=o,r[1]=n-o-r[2]/2,r[3]=s-r[0]-r[1]-r[2]-r[2]/2,r[4]=4-(r[0]+r[1]+r[2]+r[3]),t[1]+=`${Number(o).toFixed(3)}`,t[2]+=`${Number(n).toFixed(3)}`,t[3]+=`${Number(s).toFixed(3)}`,dataset=[];for(let e=0;e<r.length;e++)dataset.push({label:t[e],data:[r[e]],backgroundColor:a[e],borderWidth:1});return e(dataset)}function getLetterChartDataset(e){const t=["A","B","C","D","F","Q"],a=["rgba(128,149,7,0.66)","rgba(175,166,5,0.66)","rgba(247,194,14,0.66)","rgba(250,45,8,0.66)","rgba(211,15,2,0.66)","rgba(102,102,102,0.66)"],r=new Array(t.length).fill(0);for(let e=0;e<courseData.length;e++)r[0]+=Number(courseData[e].numA),r[1]+=Number(courseData[e].numB),r[2]+=Number(courseData[e].numC),r[3]+=Number(courseData[e].numD),r[4]+=Number(courseData[e].numF),r[5]+=Number(courseData[e].numQ);const o=r[0]+r[1]+r[2]+r[3]+r[4]+r[5];for(let e=0;e<r.length;e++)r[e]=r[e]/o*99.999999;dataset=[];for(let e=0;e<r.length;e++)dataset.push({label:t[e],data:[r[e]],backgroundColor:a[e],borderWidth:1});return e(dataset)}function getCourseDifficultyChartDataset(e){const t=interpolateNumArray(($("#year_range").val()+"").split(","),1),a=$("#semester_select").chosen().val(),r=$("#honors_select").chosen().val(),o=["rgba(128,149,7,0.66)","rgba(175,166,5,0.66)","rgba(247,194,14,0.66)","rgba(250,45,8,0.66)","rgba(211,15,2,0.66)"];let s=4,n=0,l=0,c=0,i=0,d=0;const u=[];for(let e=0;e<courseDataAll.length;e++)t.includes(courseDataAll[e].year)&&a.includes(courseDataAll[e].semester)&&honorsFilter(r,courseDataAll[e].honors)&&(n+=Number(courseDataAll[e].avgGPA),l+=1,c+=Number(courseDataAll[e].numA),c+=Number(courseDataAll[e].numB),c+=Number(courseDataAll[e].numC),i+=Number(courseDataAll[e].numD),i+=Number(courseDataAll[e].numF),i+=Number(courseDataAll[e].numI),i+=Number(courseDataAll[e].numS),i+=Number(courseDataAll[e].numU),i+=Number(courseDataAll[e].numQ),i+=Number(courseDataAll[e].numX),u.includes(courseDataAll[e].professorName)||u.push(courseDataAll[e].professorName),s>Number(courseDataAll[e].avgGPA)&&(s=Number(courseDataAll[e].avgGPA)));return n/=l,d+=1,.075<i/(c+i)&&(d+=1),.1<i/(c+i)&&(d+=1),n<3.5&&(d+=1),n<3.25&&(d+=1),n<3&&(d+=1),n<2.75&&(d+=1),n<2.25&&(d+=1),s<2.5&&(d+=1),s<2&&(d+=1),dataset=[],dataset.push({label:"Difficulty",data:[d],backgroundColor:o[Math.floor((d-1)/2)],borderWidth:1}),dataset.push({label:"",data:[10-d],backgroundColor:"rgba(102,102,102,0.66)",borderWidth:1}),e(dataset)}function getCourseDataGridDataset(){const e=($("#professor_select").chosen().val()+"").split(",").map(e=>e.toUpperCase());let t=JSON.parse(JSON.stringify(courseData));return t=t.map(e=>(e.honors=e.honors?"Yes":"No",e)),t=t.map(e=>(e.avgGPA=`${Number(e.avgGPA).toFixed(3)}`,e)),t=t.filter(t=>e.includes(t.professorName)),t}function toggleRawData(){$("#toggle_raw_data_button").html().trim().includes('<i class="fa fa-caret-square-o-up')?($("#toggle_raw_data_button").html('&nbsp;<i class="fa fa-caret-square-o-down" title="Hide Raw Data"></i>&nbsp;&nbsp;Hide Raw Data&nbsp;'),$("#raw_data_layout_container").show(10,()=>updateThemeMode()),void 0===courseDataGrid?(courseDataGrid=new gridjs.Grid({width:"100%",autoWidth:!0,sort:!0,columns:[{id:"year",name:"Year"},{id:"semester",name:"Semester"},{id:"professorName",name:"Professor Name"},{id:"section",name:"Section"},{id:"honors",name:"Honors"},{id:"avgGPA",name:"Avg GPA"},{id:"numA",name:"A",sort:!1},{id:"numB",name:"B",sort:!1},{id:"numC",name:"C",sort:!1},{id:"numD",name:"D",sort:!1},{id:"numF",name:"F",sort:!1},{id:"numI",name:"I",sort:!1},{id:"numQ",name:"Q",sort:!1},{id:"numS",name:"S",sort:!1},{id:"numU",name:"U",sort:!1},{id:"numX",name:"X",sort:!1}],data:getCourseDataGridDataset()}).render($("#raw_data_table_container")[0]),$(window).resize(()=>courseDataGrid.updateConfig({data:getCourseDataGridDataset()}).forceRender())):courseDataGrid.updateConfig({data:getCourseDataGridDataset()}).forceRender()):($("#toggle_raw_data_button").html('&nbsp;<i class="fa fa-caret-square-o-up" title="Display Raw Data"></i>&nbsp;&nbsp;Display Raw Data&nbsp;'),$("#raw_data_layout_container").hide(10))}function regenGPAChartColors(){courseGPAChart.data.datasets!==courseGPAChartPlaceholderDataset&&getGPAChartDataset(e=>{courseGPAChart.data.datasets=e,courseGPAChart.update("none")})}function honorsFilter(e,t){return"INHONORS"===e||("EXHONORS"===e?!Boolean(t):"ONHONORS"===e&&Boolean(t))}function interpolateNumArray(e,t){const a=[Number(e[0])];for(;a[a.length-1]<Number(e[e.length-1]);)a.push(a[a.length-1]+t);return a}function getColors(){let e=["#a0b242","#5858bc","#d1972c","#7283e9","#65bc69","#af439d","#45c097","#563482","#728537","#c083d8","#bb7937","#628dd4","#ba4c41","#c5639f","#b44267"],t=["#97ebdd","#ddb5dc","#cfeaaf","#74aff3","#e9c59a","#5ecee9","#eab4b5","#98cea5","#bcb8ec","#bdc08c","#92bde8","#dae9d3","#7ecac7","#b3cee3","#b1beaf"];return $("body").hasClass("light-theme")?e.sort(()=>Math.random()-.5).concat(e):t.sort(()=>Math.random()-.5).concat(t)}const responseCache={};let courseDataGrid,courseGPAChart,courseGPAChartPlaceholderDataset,courseRangeChart,courseLetterChart,courseDiffChart,allDepartments=[],allYears=[],courseDataAll=[],courseData=[],courseProfs=[],courseGPAChartClickToggle=!1;const skipped=(e,t)=>e.p0.skip||e.p1.skip?t:void 0;document.addEventListener("DOMContentLoaded",()=>{$("#raw_data_layout_container").hide(),$("#department_select").chosen({width:"100%"}),$("#professor_select").chosen({width:"100%",max_selected_options:0,disable_search_threshold:10,hide_results_on_select:!1}).change(()=>updateSelection()),$("#semester_select").chosen({width:"100%",max_selected_options:3,disable_search:!0}).change(()=>updateSelection()),$("#honors_select").chosen({width:"150px",disable_search:!0}).change(()=>updateSelection()),$("#course_range_chart_canvas").tipso({position:"bottom",width:$("#course_range_chart_canvas").width(),titleBackground:"rgba(102,102,102,.66)",background:"rgba(102,102,102,.66)",titleContent:"How to interpret:",content:"The yellow area indicates the range between the highest and lowest GPAs achieved during the selected years and semesters. The small green bar indicates the average GPA which was achieved."}),$("#course_letter_chart_canvas").tipso({position:"bottom",width:$("#course_letter_chart_canvas").width(),titleBackground:"rgba(102,102,102,.66)",background:"rgba(102,102,102,.66)",titleContent:"How to interpret:",content:"There is a section with a corresponding color for each of the following grade letters: [A, B, C, D, F, Q]. This chart shows the percentage at which each grade letter was received relative to each other."}),$("#course_difficulty_chart_canvas").tipso({position:"bottom",width:$("#course_difficulty_chart_canvas").width(),tooltipHover:!0,titleBackground:"rgba(102,102,102,.66)",background:"rgba(102,102,102,.66)",titleContent:"How to interpret:",content:'This chart takes a few of the statistics for the course and plugs them into the following <span class="color-white"><a href="https://github.com/adibarra/tamugd-website/blob/main/public/js/main.js#L522"> formula</a></span> to determine a relative difficulty score for each course.'}),$("#year_range").jRange({from:0,to:9999999,step:1,scale:1,format:"%s",width:$(".inner-year-container").width(),showLabels:!1,snap:!0,isRange:!0,onstatechange:()=>updateSelection()}),$(window).resize(()=>$("#year_range").jRange("updateRender",allYears)),getSupportedData(),courseGPAChartPlaceholderDataset=[{label:"Professor 1",data:[1.2,1.8,void 0,3.1,3.2,3,3.3,3.6,2.5,2.9,void 0,void 0,3,2.6,3.2,3.6,3.7,3.5],fill:!1,borderColor:"#666666",backgroundColor:"#66666680",tension:.1,borderWidth:2,segment:{borderDash:e=>skipped(e,[6,6])}},{label:"Professor 2",data:[3.2,2.8,3.2,2.6,2.3,void 0,void 0,3.2,3.5,3.6,3.4,2.6,2.9,3.1,3.4,2.75,2.6,2.4],fill:!1,borderColor:"#9944FF",backgroundColor:"#9944FF80",tension:.1,borderWidth:2,segment:{borderDash:e=>skipped(e,[6,6])}},{label:"Professor 3",data:[2.2,3.8,2.6,3.2,2.6,3.6,2.7,2.1,2.2,1.6,1.45,2.1,2.2,1.45,1.6,2.1,2.4,2.85],fill:!1,borderColor:"#CC77CC",backgroundColor:"#CC77CC80",tension:.1,borderWidth:2,segment:{borderDash:e=>skipped(e,[6,6])}},{label:"Professor 4",data:[1.5,1.6,1.4,1.8,1.3,1.4,1.9,1.7,1.5,1.5,1.7,1.8,2,2.1,1.95,1.7,1.5,1.4],fill:!1,borderColor:"#77CC77",backgroundColor:"#77CC7780",tension:.1,borderWidth:2,segment:{borderDash:e=>skipped(e,[6,6])}}],courseGPAChart=new Chart(ctx=$("#gpa_chart_canvas")[0].getContext("2d"),{type:"line",data:{labels:getGPAChartLabels([2014,2022],["SPRING","FALL"]),datasets:courseGPAChartPlaceholderDataset},options:{responsive:!0,maintainAspectRatio:!1,spanGaps:!0,plugins:{legend:{display:!0,position:"right",align:"left",labels:{usePointStyle:!0,boxWidth:10},onClick:(e,t)=>{const a=e.chart.data.datasets;courseGPAChartClickToggle=!courseGPAChartClickToggle,a.forEach(e=>e.hidden=courseGPAChartClickToggle),courseGPAChartClickToggle&&(a[t.datasetIndex].hidden=!1),e.chart.update()}},tooltip:{callbacks:{label:e=>`${e.dataset.label}: ${Number(e.parsed.y).toFixed(3)}`}}},interaction:{intersect:!1},xAxes:[{ticks:{autoSkip:!0,maxRotation:90,minRotation:0}}]}}),courseRangeChart=new Chart(ctx=$("#course_range_chart_canvas")[0].getContext("2d"),{type:"bar",data:{labels:[""],datasets:[{label:"",data:[1.3],backgroundColor:"rgba(102,102,102,.66)",borderWidth:1},{label:"GPA Low: 1.300",data:[1.53],backgroundColor:"rgba(247,194,14,.66)",borderWidth:1},{label:"GPA Avg: 2.830",data:[.04],backgroundColor:"rgba(128,149,7,.66)",borderWidth:1},{label:"GPA High: 3.910",data:[1.08],backgroundColor:"rgba(247,194,14,.66)",borderWidth:1},{label:"",data:[.05],backgroundColor:"rgba(102,102,102,.66)",borderWidth:1}]},options:{responsive:!0,maintainAspectRatio:!1,indexAxis:"y",scales:{x:{ticks:{suggestedMin:0,suggestedMax:4,min:0,max:4},stacked:!0},y:{stacked:!0}},plugins:{title:{display:!0,text:"Course GPA Range"},legend:{display:!1},tooltip:{enabled:!1,callbacks:{label:e=>e.dataset.label}}},interaction:{intersect:!1,mode:"y"}}}),courseLetterChart=new Chart(ctx=$("#course_letter_chart_canvas")[0].getContext("2d"),{plugins:[ChartDataLabels],type:"bar",data:{labels:[""],datasets:[{label:"A",data:[32],backgroundColor:"rgba(128,149,7,.66)",borderWidth:1},{label:"B",data:[39],backgroundColor:"rgba(175,166,5,.66)",borderWidth:1},{label:"C",data:[14],backgroundColor:"rgba(247,194,14,.66)",borderWidth:1},{label:"D",data:[7],backgroundColor:"rgba(250,45,8,.66)",borderWidth:1},{label:"F",data:[5],backgroundColor:"rgba(211,15,2,.66)",borderWidth:1},{label:"Q",data:[3],backgroundColor:"rgba(102,102,102,.66)",borderWidth:1}]},options:{responsive:!0,maintainAspectRatio:!1,indexAxis:"y",scales:{x:{stacked:!0,ticks:{min:0,max:100,callback:e=>`${e}%`}},y:{stacked:!0}},plugins:{title:{display:!0,text:"Course Letter Grades"},legend:{display:!1},tooltip:{callbacks:{label:e=>`${e.dataset.label}: ${Number(e.dataset.data).toFixed(1)}%`}},datalabels:{color:"#000000B0",formatter:(e,t)=>Number(t.dataset.data)>1.5?t.dataset.label:""}},interaction:{intersect:!1}}}),courseDiffChart=new Chart(ctx=$("#course_difficulty_chart_canvas")[0].getContext("2d"),{plugins:[ChartDataLabels],type:"bar",data:{labels:[""],datasets:[{label:"Difficulty",data:[6],backgroundColor:"rgba(247,194,14,.66)",borderWidth:1},{label:"",data:[4],backgroundColor:"rgba(102,102,102,.66)",borderWidth:1}]},options:{responsive:!0,maintainAspectRatio:!1,indexAxis:"y",scales:{x:{stacked:!0,ticks:{min:1,max:10}},y:{stacked:!0}},plugins:{title:{display:!0,text:"Relative Course Difficulty"},legend:{display:!1},tooltip:{enabled:!1},datalabels:{color:"#000000B0",formatter:(e,t)=>"Difficulty"===t.dataset.label?e+"/10":""}},interaction:{intersect:!1}}}),$("#dark_theme").bind("click",()=>regenGPAChartColors()),$("#light_theme").bind("click",()=>regenGPAChartColors()),$("#course_field").bind("keyup",e=>{"Enter"===e.key&&getCourseData()}),$("#search_button").bind("click",()=>getCourseData()),$("#new_chart_colors_button").bind("click",()=>regenGPAChartColors()),$("#toggle_raw_data_button").bind("click",()=>toggleRawData()),$("#back_to_top").bind("click",()=>$("body")[0].scroll({top:0,left:0,behavior:"smooth"})),$("body").scroll(()=>$("#back_to_top").css("bottom",isElementVisible("#footer_bar")?$("body").height()-$("#footer_bar").position().top:0))});
